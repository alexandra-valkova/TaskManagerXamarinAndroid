//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 
namespace TaskManagerApiWCF.Models
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentModel", Namespace="http://schemas.datacontract.org/2004/07/TaskManagerApiWCF.Models")]
    public partial class CommentModel : TaskManagerApiWCF.Models.BaseModel
    {
        
        private System.DateTime CreateDateField;
        
        private int TaskIDField;
        
        private string TextField;
        
        private int UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return this.CreateDateField;
            }
            set
            {
                this.CreateDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID
        {
            get
            {
                return this.TaskIDField;
            }
            set
            {
                this.TaskIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    //[System.Runtime.Serialization.DataContractAttribute(Name="BaseModel", Namespace="http://schemas.datacontract.org/2004/07/TaskManagerApiWCF.Models")]
    //[System.Runtime.Serialization.KnownTypeAttribute(typeof(TaskManagerApiWCF.Models.CommentModel))]
    //public partial class BaseModel : object
    //{
        
    //    private int IDField;
        
    //    [System.Runtime.Serialization.DataMemberAttribute()]
    //    public int ID
    //    {
    //        get
    //        {
    //            return this.IDField;
    //        }
    //        set
    //        {
    //            this.IDField = value;
    //        }
    //    }
    //}
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IBaseServicesOf_CommentModel")]
public interface IBaseServicesOf_CommentModel
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBaseServicesOf_CommentModel/GetAll", ReplyAction="http://tempuri.org/IBaseServicesOf_CommentModel/GetAllResponse")]
    System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState);
    
    TaskManagerApiWCF.Models.CommentModel[] EndGetAll(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBaseServicesOf_CommentModel/GetByID", ReplyAction="http://tempuri.org/IBaseServicesOf_CommentModel/GetByIDResponse")]
    System.IAsyncResult BeginGetByID(int id, System.AsyncCallback callback, object asyncState);
    
    TaskManagerApiWCF.Models.CommentModel EndGetByID(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBaseServicesOf_CommentModel/Save", ReplyAction="http://tempuri.org/IBaseServicesOf_CommentModel/SaveResponse")]
    System.IAsyncResult BeginSave(TaskManagerApiWCF.Models.CommentModel entity, System.AsyncCallback callback, object asyncState);
    
    void EndSave(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBaseServicesOf_CommentModel/Delete", ReplyAction="http://tempuri.org/IBaseServicesOf_CommentModel/DeleteResponse")]
    System.IAsyncResult BeginDelete(TaskManagerApiWCF.Models.CommentModel entity, System.AsyncCallback callback, object asyncState);
    
    void EndDelete(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IBaseServicesOf_CommentModelChannel : IBaseServicesOf_CommentModel, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public TaskManagerApiWCF.Models.CommentModel[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((TaskManagerApiWCF.Models.CommentModel[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCommentByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetCommentByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public TaskManagerApiWCF.Models.CommentModel Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((TaskManagerApiWCF.Models.CommentModel)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class BaseServicesOf_CommentModelClient : System.ServiceModel.ClientBase<IBaseServicesOf_CommentModel>, IBaseServicesOf_CommentModel
{
    
    private BeginOperationDelegate onBeginGetAllDelegate;
    
    private EndOperationDelegate onEndGetAllDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetByIDDelegate;
    
    private EndOperationDelegate onEndGetByIDDelegate;
    
    private System.Threading.SendOrPostCallback onGetByIDCompletedDelegate;
    
    private BeginOperationDelegate onBeginSaveDelegate;
    
    private EndOperationDelegate onEndSaveDelegate;
    
    private System.Threading.SendOrPostCallback onSaveCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteDelegate;
    
    private EndOperationDelegate onEndDeleteDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public BaseServicesOf_CommentModelClient()
    {
    }
    
    public BaseServicesOf_CommentModelClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public BaseServicesOf_CommentModelClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public BaseServicesOf_CommentModelClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public BaseServicesOf_CommentModelClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetAllCommentsCompletedEventArgs> GetAllCompleted;
    
    public event System.EventHandler<GetCommentByIDCompletedEventArgs> GetByIDCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IBaseServicesOf_CommentModel.BeginGetAll(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAll(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    TaskManagerApiWCF.Models.CommentModel[] IBaseServicesOf_CommentModel.EndGetAll(System.IAsyncResult result)
    {
        return base.Channel.EndGetAll(result);
    }
    
    private System.IAsyncResult OnBeginGetAll(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IBaseServicesOf_CommentModel)(this)).BeginGetAll(callback, asyncState);
    }
    
    private object[] OnEndGetAll(System.IAsyncResult result)
    {
        TaskManagerApiWCF.Models.CommentModel[] retVal = ((IBaseServicesOf_CommentModel)(this)).EndGetAll(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllCompleted(object state)
    {
        if ((this.GetAllCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllCompleted(this, new GetAllCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllAsync()
    {
        this.GetAllAsync(null);
    }
    
    public void GetAllAsync(object userState)
    {
        if ((this.onBeginGetAllDelegate == null))
        {
            this.onBeginGetAllDelegate = new BeginOperationDelegate(this.OnBeginGetAll);
        }
        if ((this.onEndGetAllDelegate == null))
        {
            this.onEndGetAllDelegate = new EndOperationDelegate(this.OnEndGetAll);
        }
        if ((this.onGetAllCompletedDelegate == null))
        {
            this.onGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllDelegate, null, this.onEndGetAllDelegate, this.onGetAllCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IBaseServicesOf_CommentModel.BeginGetByID(int id, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetByID(id, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    TaskManagerApiWCF.Models.CommentModel IBaseServicesOf_CommentModel.EndGetByID(System.IAsyncResult result)
    {
        return base.Channel.EndGetByID(result);
    }
    
    private System.IAsyncResult OnBeginGetByID(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int id = ((int)(inValues[0]));
        return ((IBaseServicesOf_CommentModel)(this)).BeginGetByID(id, callback, asyncState);
    }
    
    private object[] OnEndGetByID(System.IAsyncResult result)
    {
        TaskManagerApiWCF.Models.CommentModel retVal = ((IBaseServicesOf_CommentModel)(this)).EndGetByID(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetByIDCompleted(object state)
    {
        if ((this.GetByIDCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetByIDCompleted(this, new GetCommentByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetByIDAsync(int id)
    {
        this.GetByIDAsync(id, null);
    }
    
    public void GetByIDAsync(int id, object userState)
    {
        if ((this.onBeginGetByIDDelegate == null))
        {
            this.onBeginGetByIDDelegate = new BeginOperationDelegate(this.OnBeginGetByID);
        }
        if ((this.onEndGetByIDDelegate == null))
        {
            this.onEndGetByIDDelegate = new EndOperationDelegate(this.OnEndGetByID);
        }
        if ((this.onGetByIDCompletedDelegate == null))
        {
            this.onGetByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetByIDCompleted);
        }
        base.InvokeAsync(this.onBeginGetByIDDelegate, new object[] {
                    id}, this.onEndGetByIDDelegate, this.onGetByIDCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IBaseServicesOf_CommentModel.BeginSave(TaskManagerApiWCF.Models.CommentModel entity, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSave(entity, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IBaseServicesOf_CommentModel.EndSave(System.IAsyncResult result)
    {
        base.Channel.EndSave(result);
    }
    
    private System.IAsyncResult OnBeginSave(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        TaskManagerApiWCF.Models.CommentModel entity = ((TaskManagerApiWCF.Models.CommentModel)(inValues[0]));
        return ((IBaseServicesOf_CommentModel)(this)).BeginSave(entity, callback, asyncState);
    }
    
    private object[] OnEndSave(System.IAsyncResult result)
    {
        ((IBaseServicesOf_CommentModel)(this)).EndSave(result);
        return null;
    }
    
    private void OnSaveCompleted(object state)
    {
        if ((this.SaveCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SaveAsync(TaskManagerApiWCF.Models.CommentModel entity)
    {
        this.SaveAsync(entity, null);
    }
    
    public void SaveAsync(TaskManagerApiWCF.Models.CommentModel entity, object userState)
    {
        if ((this.onBeginSaveDelegate == null))
        {
            this.onBeginSaveDelegate = new BeginOperationDelegate(this.OnBeginSave);
        }
        if ((this.onEndSaveDelegate == null))
        {
            this.onEndSaveDelegate = new EndOperationDelegate(this.OnEndSave);
        }
        if ((this.onSaveCompletedDelegate == null))
        {
            this.onSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompleted);
        }
        base.InvokeAsync(this.onBeginSaveDelegate, new object[] {
                    entity}, this.onEndSaveDelegate, this.onSaveCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IBaseServicesOf_CommentModel.BeginDelete(TaskManagerApiWCF.Models.CommentModel entity, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDelete(entity, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IBaseServicesOf_CommentModel.EndDelete(System.IAsyncResult result)
    {
        base.Channel.EndDelete(result);
    }
    
    private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        TaskManagerApiWCF.Models.CommentModel entity = ((TaskManagerApiWCF.Models.CommentModel)(inValues[0]));
        return ((IBaseServicesOf_CommentModel)(this)).BeginDelete(entity, callback, asyncState);
    }
    
    private object[] OnEndDelete(System.IAsyncResult result)
    {
        ((IBaseServicesOf_CommentModel)(this)).EndDelete(result);
        return null;
    }
    
    private void OnDeleteCompleted(object state)
    {
        if ((this.DeleteCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteAsync(TaskManagerApiWCF.Models.CommentModel entity)
    {
        this.DeleteAsync(entity, null);
    }
    
    public void DeleteAsync(TaskManagerApiWCF.Models.CommentModel entity, object userState)
    {
        if ((this.onBeginDeleteDelegate == null))
        {
            this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
        }
        if ((this.onEndDeleteDelegate == null))
        {
            this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
        }
        if ((this.onDeleteCompletedDelegate == null))
        {
            this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                    entity}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IBaseServicesOf_CommentModel CreateChannel()
    {
        return new BaseServicesOf_CommentModelClientChannel(this);
    }
    
    private class BaseServicesOf_CommentModelClientChannel : ChannelBase<IBaseServicesOf_CommentModel>, IBaseServicesOf_CommentModel
    {
        
        public BaseServicesOf_CommentModelClientChannel(System.ServiceModel.ClientBase<IBaseServicesOf_CommentModel> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAll", _args, callback, asyncState);
            return _result;
        }
        
        public TaskManagerApiWCF.Models.CommentModel[] EndGetAll(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            TaskManagerApiWCF.Models.CommentModel[] _result = ((TaskManagerApiWCF.Models.CommentModel[])(base.EndInvoke("GetAll", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetByID(int id, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = id;
            System.IAsyncResult _result = base.BeginInvoke("GetByID", _args, callback, asyncState);
            return _result;
        }
        
        public TaskManagerApiWCF.Models.CommentModel EndGetByID(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            TaskManagerApiWCF.Models.CommentModel _result = ((TaskManagerApiWCF.Models.CommentModel)(base.EndInvoke("GetByID", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSave(TaskManagerApiWCF.Models.CommentModel entity, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = entity;
            System.IAsyncResult _result = base.BeginInvoke("Save", _args, callback, asyncState);
            return _result;
        }
        
        public void EndSave(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("Save", _args, result);
        }
        
        public System.IAsyncResult BeginDelete(TaskManagerApiWCF.Models.CommentModel entity, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = entity;
            System.IAsyncResult _result = base.BeginInvoke("Delete", _args, callback, asyncState);
            return _result;
        }
        
        public void EndDelete(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("Delete", _args, result);
        }
    }
}
